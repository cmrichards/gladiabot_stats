.row
  .col
    .search_box
      :javascript
        $(function() {
          $("#player_name").focus();
        })
      - if false && Game.exists?
        %p.hidden-md-down
          Data is available for games between:
          #{Game.minimum(:resolution_time).to_s(:long)}
          and
          #{Game.maximum(:resolution_time).to_s(:long)}

      = form_with model: form, :scope=>:form, :url=>( action_name[/global/] ? player_charts_url : url_for()), method: :get, class: "form" do |f|
        .row
          .col-lg
            .form-group
              %label.col-form-label.col-form-label-sm.hidden-md-down Player Name
              = f.text_field :player_name, placeholder: "Enter player name", class: "form-control form-control-sm player_autocomplete",
                id: "player_name",
                required: true, id: "player_name"
        .row
          .col-lg
            .form-group
              %label.col-form-label.col-form-label-sm.hidden-md-down Opponent Name
              = f.text_field :opponent_player_name, placeholder: "*optional", class: "form-control form-control-sm player_autocomplete",
                id: "opponent_player_name"
        .row
          .col-lg
            .form-group
              %label.col-form-label.col-form-label-sm.hidden-md-down Date From
              = f.text_field :start_date, class: "form-control form-control-sm", required: true, id: "date-from",
                value: (form.start_date && form.start_date.strftime("%d %b %Y"))
        .row
          .col-lg
            .form-group
              %label.col-form-label.col-form-label-sm.hidden-md-down Date To
              = f.text_field :end_date,   class: "form-control form-control-sm", required: true, id: "date-to",
                value: (form.end_date && form.end_date.strftime("%d %b %Y"))
        .row
          .col-lg
            .form-group
              = submit_tag "Search", class: "btn btn-primary btn-block btn-sm"

        .flexContainer.mapSelection
          %label{:style=>"font-size: 80%;"}
            = link_to "All", "#", onclick: "$('input.mission_select').prop('checked', true); return false;"
            &nbsp;|&nbsp;
            = link_to "None", "#", onclick: "$('input.mission_select').prop('checked', false); return false;"

          - form.available_missions.each do |mission|
            %label.map
              = check_box_tag "form[mission_ids][]", mission.id, form.mission_ids.blank? || form.mission_ids.include?(mission.id), class: "mission_select"
              &nbsp;
              = mission.name
- if form.errors.any?
  %p{:style=>"margin-top: 20px;"}
    There are ssues with this form:
  %ul.errors
    - form.errors.full_messages.each do |message|
      %li= message

